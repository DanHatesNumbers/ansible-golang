---

- name: Set local paths
  set_fact:
    local_home: "{{ lookup('env','HOME') }}"
  become: False

- name: Create golang projects directory
  file:
    path: "{{ local_home }}/{{ golang_path }}"
    state: directory
    recurse: yes
  become: False

- name: Set path to .zshrc
  set_fact:
    zshrc_path: "{{ local_home }}/.zshrc"
  when: zshrc_path is undefined
  become: False

- name: Test if .zshrc exists
  stat:
    path: "{{ zshrc_path }}"
  register: zshrc_stat
  become: False

- name: Resolve .zshrc symlink
  set_fact:
    zshrc_path: "{{ zshrc_stat.stat.lnk_source }}"
  when: zshrc_stat.stat.exists and zshrc_stat.stat.islnk
  become: False

- name: Add GOPATH to .zshrc
  lineinfile:
    dest: "{{ zshrc_path }}"
    regexp: 'export GOPATH='
    line: "export GOPATH=$HOME/{{ golang_path }}"
  become: False
  when: zshrc_stat.stat.exists == True

- name: Add $GOPATH/bin to PATH in .zshrc
  lineinfile:
    dest: "{{ zshrc_path }}"
    regexp: 'export PATH=.*\$GOPATH/bin'
    line: "export PATH=$PATH:$GOPATH/bin"
  become: False
  when: zshrc_stat.stat.exists == True

- name: Set path to .bashrc
  set_fact:
    bashrc_path: "{{ local_home }}/.bashrc"
  when: bashrc_path is undefined
  become: False

- name: Test if .bashrc exists
  stat: path="{{ bashrc_path }}"
  register: bashrc_stat
  become: False

- name: Resolve .bashrc symlink
  set_fact:
    bashrc_path: "{{ bashrc_stat.stat.lnk_source }}"
  when: bashrc_stat.stat.exists and bashrc_stat.stat.islnk
  become: False

- name: Add GOPATH to .bashrc
  lineinfile:
    dest: "{{ bashrc_path }}"
    regexp: 'export GOPATH='
    line: "export GOPATH=$HOME/{{ golang_path }}"
  become: False
  when: bashrc_stat.stat.exists == True

- name: Add $GOPATH/bin to PATH in .bashrc
  lineinfile:
    dest: "{{ bashrc_path }}"
    regexp: 'export PATH=.*\$GOPATH/bin'
    line: "export PATH=$PATH:$GOPATH/bin"
  become: False
  when: bashrc_stat.stat.exists == True
