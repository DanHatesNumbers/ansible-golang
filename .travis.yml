# -*- mode: yaml -*-
# vim:ts=2:sw=2:ai:si:syntax=yaml
#
# Travis CI configuration
# https://docs.travis-ci.com/
---

# Run tests against pull requests and main branches only
if: |
  type = pull_request OR \
  branch IN (master, develop)

dist: xenial
os: linux
language: shell

install:
  # Install Ansible with pip on Ubuntu
  - >
    if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then
      ${PIP_BIN:-pip} install --user ansible${ANSIBLE_VERSION:-}
    fi

  # Check Ansible version
  - ansible --version

  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path=../\n' > ansible.cfg

  # Set Python interpreter path
  - >
    if [[ -n "${PYTHON_INTERPRETER}" ]]; then
      echo "interpreter_python=${PYTHON_INTERPRETER}" >> ansible.cfg
    fi

before_script:
  # https://github.com/travis-ci/travis-ci/issues/6307
  - >
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      rvm get head || true
    fi

  # Remove Go versions installed with Gimme
  - >
    if [[ -d "/home/travis/.gimme" ]]; then
      rm -rf /home/travis/.gimme
    fi

  # Unset GOROOT and GIMME_ENV variables
  - unset GOROOT
  - unset GIMME_ENV

  # Remove Gimme installed Go version from the PATH
  - export PATH=$(echo "${PATH}" | sed 's~/home/travis/.gimme/versions/\([^/]*\)/bin:~~')

script:

  - >
    if command -v go >/dev/null; then
      command -v go
    fi

  # Basic role syntax check
  - ansible-playbook tests/test.yml -i tests/inventory --syntax-check

  # Test role run
  - >
    ansible-playbook tests/test.yml -i tests/inventory --connection=local

  # Test idempotence
  - >
    ansible-playbook tests/test.yml -i tests/inventory --connection=local
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Test go is installed on PATH
  - >
    source ~/.bashrc
    && go version

stages:
  - validate
  - test

jobs:
  include:

    # Run validation stage in Linux with latest Ansible only
    - stage: validate
      name: Validate with pre-commit
      os: linux
      dist: bionic
      language: python
      python: "3.7"
      addons:
        apt:
          packages:
            - python-pip
            - python-dev
            - shellcheck
        snaps:
          - shfmt
      cache:
        directories:
          - $HOME/.cache/pre-commit/
      before_cache:
        - rm -f $HOME/.cache/pre-commit/pre-commit.log
      install:
        - pip install -r requirements.dev.txt
      script:
        - pre-commit run -a

    # Run tests
    - stage: test
      name: "Ubuntu 20.04 LTS (Focal) with Ansible 2.9"
      os: linux
      dist: focal
      env: >-
        ANSIBLE_VERSION='<2.10'
        PIP_BIN='pip3'
        PYTHON_INTERPRETER=auto
      addons:
        apt:
          packages:
            - python3-pip
            - python3-dev

    - stage: test
      name: "Ubuntu 18.04 (Bionic) with Ansible 2.8"
      os: linux
      dist: bionic
      env: >-
        ANSIBLE_VERSION='<2.9.0,!=2.8.6'
      addons:
        apt:
          packages:
            - python-pip
            - python-dev

    - stage: test
      name: "Ubuntu 16.04 (Xenial) with Ansible 2.7"
      os: linux
      dist: xenial
      env: >-
        ANSIBLE_VERSION='<2.8.0'
      addons:
        apt:
          packages:
            - python-pip
            - python-dev

    - stage: test
      name: "macOS 10.15.5 (Catalina) with Xcode 12"
      os: osx
      osx_image: xcode12
      addons:
        homebrew:
          brewfile: Brewfile.travis

    - stage: test
      name: "macOS 10.15.5 (Catalina) with Xcode 11.6"
      os: osx
      osx_image: xcode11.6
      addons:
        homebrew:
          brewfile: Brewfile.travis

    - stage: test
      name: "macOS 10.14 (Mojave) with Xcode 11.0"
      os: osx
      osx_image: xcode11
      addons:
        homebrew:
          brewfile: Brewfile.travis

    - stage: test
      name: "macOS 10.13 (High Sierra) with Xcode 10.1"
      os: osx
      osx_image: xcode10.1
      addons:
        homebrew:
          brewfile: Brewfile.travis
          update: true

notifications:
  webhooks:
    - https://galaxy.ansible.com/api/v1/notifications/
